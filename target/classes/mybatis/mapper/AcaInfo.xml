<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="impl.AcademyInfoImpl">
	<select id="AcaInfo" resultType="mybatis01.AcademyMemberDTO">
		SELECT * FROM members where IDX=#{param1}
	</select>
	
	<select id="review" resultType="mybatis01.ReviewWriteDTO"
			parameterType="mybatis01.ParamDTO">
		SELECT * FROM (
	        SELECT Tb.*, rownum rNum FROM (
	            SELECT A.* ,(select count(*) from reviewlike where reviewidx=A.reviewidx group by A.reviewidx) AS countlike
	            FROM reviewwrite A
	            <choose>
					<when test="!keyString.equals('') and keyString!=null">
						WHERE ${keyField} like '%'||#{keyString}||'%' and ACAIDX=${acaidx}
				   	</when> 
				   	<otherwise>
				  		WHERE ACAIDX=${acaidx}		  			
				  	</otherwise>
			   	</choose>
	            ORDER BY REVIEWIDX DESC
	        ) Tb
	    )
	    WHERE rNum BETWEEN ${start} AND ${end}
		<!-- SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT * FROM reviewwrite 
				<choose>
					<when test="!keyString.equals('') and keyString!=null">
						WHERE ${keyField} like '%'||#{keyString}||'%' and ACAIDX=${acaidx}
				   	</when> 
				   	<otherwise>
				  		WHERE ACAIDX=${acaidx}		  			
				  	</otherwise>
			   	</choose>
				ORDER BY REVIEWIDX DESC
			) Tb
		)
		WHERE rNum BETWEEN ${start} AND ${end}  -->
	</select>
	<!-- 댓글 쓰기 -->
	<insert id="reviewWrite">
		insert into reviewWrite(ReviewContents,Score,Id,AcaIdx,reviewidx)
		VALUES (#{param4},#{param3}, #{param2}, #{param1},REVIEWIDX_REQ.nextval)
	</insert>
	<!-- 댓글 총갯수 찾기 -->
	<select id="getTotalCountSearchReview" resultType="int" 
		parameterType="mybatis01.ParamDTO">
		SELECT COUNT(*) FROM ReviewWrite
		<choose>
			<when test="!keyString.equals('') and keyString!=null">
				WHERE ${keyField} like '%'||#{keyString}||'%' and ACAIDX=${acaidx}
		   	</when> 
		   	<otherwise>
		  		WHERE ACAIDX=${acaidx}	  			
		  	</otherwise>
	   	</choose>
	</select> 
	<!-- 댓글 삭제 -->
	<delete id="delete">
		DELETE FROM reviewWrite WHERE reviewidx=#{param1}
	</delete>
	<!-- 강사정보 가져오기 -->
	<select id="teacherInfo" resultType="mybatis01.AcaTeacherDTO">
		SELECT * FROM acateacher where id=#{param1}
	</select>
	<!-- 학원소개 가져오기 -->
	<select id="acaIntro" resultType="mybatis01.AcaiIntroduceDTO">
		SELECT * FROM acaintroduce where id=#{param1}
	</select>
	<!-- 강의 목록 가져오기 -->
	<select id="classIntro" resultType="dto.AcaClassDTO">
	select z.*,(select count(*) from enrollclass where classidx = z.classidx) classmembers
      from
      (
          select a.teaname, to_char(b.acastartdate,'yy-mm-dd') acastartdate,
           to_char(b.acaenddate,'yy-mm-dd') acaenddate, b.acaday, 
           to_char(b.acastarttime,'hh24:mi') acastarttime, to_char(b.acaendtime,'hh24:mi')
            acaendtime, b.acaclassname,b.numberofparticipants,b.classidx,b.teaidx,b.pay
            
          from members m inner join acateacher a
              on m.id = a.id
              inner join acaclass b
              on a.teaidx = b.teaidx
          where m.idx = #{param1}
      ) z
	</select>
	<!-- 수정할 댓글 정보 -->
	<select id="reviewModify" resultType="mybatis01.ReviewWriteDTO">
		SELECT * FROM reviewWrite where REVIEWIDX=#{param1}
	</select>
	<!-- 댓글 수정 처리 -->
	<update id="modifyAction" >
		update  reviewWrite set 
			score= #{param2}, reviewcontents=#{param3}
		WHERE REVIEWIDX=#{param1}
	</update>
	<!-- 수정할 댓글 정보 -->
	<select id="reviewIdentify" resultType="dto.MembersDTO" parameterType="String">
		select e.id
		from members m inner join acateacher t
		    on m.id = t.id
		    inner join acaclass c
		    on t.teaidx = c.teaidx
		    inner join enrollclass e
		    on c.classidx = e.classidx
		where m.idx = #{param1}
	</select>
</mapper>

   